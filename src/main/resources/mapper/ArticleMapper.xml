<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.ito.blog.dao.ArticleMapper">
    <resultMap id="BaseResultMap" type="Article">
        <result property="id" column="id" />
        <result property="typeId" column="type_id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <select id="selectArticleSummaryByPage" resultMap="BaseResultMap">
        SELECT id,type_id,title,left(content,400)as content,created_at,updated_at
        FROM article
        order by created_at desc limit #{pageSize} offset #{offset};
    </select>

    <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select * from article where id = #{id};
    </select>

    <select id="selectArticleSummaryByPageAndTypeId" resultMap="BaseResultMap">
        SELECT id,type_id,title,left(content,400)as content,created_at,updated_at
        FROM article
        WHERE type_id = #{typeId}
        order by created_at desc limit #{pageSize} offset #{offset};
    </select>

    <select id="selectAllArticleCount" resultType="java.lang.Integer">
        select count(*) from article;
    </select>

    <select id="selectArticleCountByTypeId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(*) from article where type_id = #{typeId};
    </select>

    <select id="selectLatestArticles" resultMap="BaseResultMap">
        select id,title
        from article
        order by created_at desc
        limit 5 offset 0;
    </select>

    <select id="selectArticleBySearch" resultMap="BaseResultMap">
        SELECT id,type_id,title,left(content,220)as content,created_at,updated_at
        FROM article
        WHERE match(title, content) against(#{key}IN BOOLEAN MODE)
        limit #{pageSize} offset #{offset};
    </select>

    <insert id="insert">
        insert into article(title,type_id,content)
        values(#{title},#{typeId},#{content});
    </insert>
    <update id="update">
        update article
        set title = #{title},content = #{content},type_id = #{typeId}
        where id = #{id};
    </update>
    <delete id="delete" parameterType="java.lang.Integer">
        delete from article
        where id = #{id};
    </delete>
    <select id="selectEditingArticleById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select type_id,title,content
        from article
        where id = #{id};
    </select>
</mapper>